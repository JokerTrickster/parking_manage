definitions:
  request.LabelData:
    properties:
      has_vehicle:
        type: boolean
      roi_id:
        type: string
    type: object
  request.ReqLabelSave:
    properties:
      labels:
        items:
          $ref: '#/definitions/request.LabelData'
        type: array
    type: object
  request.ReqLearning:
    properties:
      iterations:
        type: integer
      learningPath:
        type: string
      learningRate:
        type: number
      projectId:
        type: string
      roiPath:
        type: string
      testPath:
        type: string
      varThreshold:
        type: number
    type: object
  response.CctvImagesData:
    properties:
      cctv_id:
        type: string
      fg_mask_image:
        type: string
      roi_result_image:
        type: string
    type: object
  response.CctvResultInfo:
    properties:
      cctv_id:
        type: string
      has_images:
        type: boolean
    type: object
  response.FolderInfo:
    properties:
      fileCount:
        type: integer
      name:
        type: string
      path:
        type: string
    type: object
  response.GetLabelData:
    properties:
      has_vehicle:
        type: boolean
      roi_id:
        type: string
    type: object
  response.HistoryItem:
    properties:
      cctv_list:
        items:
          type: string
        type: array
      created_at:
        type: string
      folder_path:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  response.LearningResultsData:
    properties:
      cctv_list:
        items:
          $ref: '#/definitions/response.CctvResultInfo'
        type: array
      timestamp:
        type: string
    type: object
  response.ResCctvImages:
    properties:
      data:
        $ref: '#/definitions/response.CctvImagesData'
      message:
        type: string
      success:
        type: boolean
    type: object
  response.ResGetLabel:
    properties:
      labels:
        items:
          $ref: '#/definitions/response.GetLabelData'
        type: array
    type: object
  response.ResHistory:
    properties:
      results:
        items:
          $ref: '#/definitions/response.HistoryItem'
        type: array
    type: object
  response.ResImage:
    properties:
      content_type:
        type: string
      data:
        items:
          type: integer
        type: array
      message:
        type: string
      success:
        type: boolean
    type: object
  response.ResLearning:
    properties:
      folder_path:
        type: string
    type: object
  response.ResLearningResults:
    properties:
      data:
        $ref: '#/definitions/response.LearningResultsData'
      message:
        type: string
      success:
        type: boolean
    type: object
  response.ResLearningStats:
    properties:
      folders:
        items:
          $ref: '#/definitions/response.FolderInfo'
        type: array
      total:
        type: integer
    type: object
  response.ResLearningUpload:
    properties:
      failed:
        type: integer
      success:
        type: integer
      total_files:
        type: integer
    type: object
  response.ResRoiStats:
    properties:
      folders:
        items:
          $ref: '#/definitions/response.FolderInfo'
        type: array
      total:
        type: integer
    type: object
  response.ResRoiUpload:
    properties:
      failed:
        type: integer
      success:
        type: integer
      total_files:
        type: integer
    type: object
  response.ResSaveLabel:
    properties:
      labels:
        items:
          $ref: '#/definitions/response.SaveLabelData'
        type: array
    type: object
  response.ResTestStats:
    properties:
      folders:
        items:
          $ref: '#/definitions/response.FolderInfo'
        type: array
      total:
        type: integer
    type: object
  response.ResTestUpload:
    properties:
      failed:
        type: integer
      success:
        type: integer
      total_files:
        type: integer
    type: object
  response.SaveLabelData:
    properties:
      has_vehicle:
        type: boolean
      roi_id:
        type: string
    type: object
info:
  contact: {}
paths:
  /v0.1/parking/{projectId}/{folder}/{cctvId}/images:
    get:
      consumes:
      - application/json
      description: Gets the ROI result and foreground mask images for a specific CCTV
      parameters:
      - description: Project ID
        in: path
        name: projectId
        required: true
        type: string
      - description: Learning result folder
        in: path
        name: folder
        required: true
        type: string
      - description: CCTV ID
        in: path
        name: cctvId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResCctvImages'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get CCTV Images
      tags:
      - parking
  /v0.1/parking/{projectId}/{folderPath}/{cctvId}/images/{imageType}:
    get:
      consumes:
      - application/json
      description: Gets a specific image (roi_result or fgmask) for a CCTV
      parameters:
      - description: Project ID
        in: path
        name: projectId
        required: true
        type: string
      - description: Learning result folder path
        in: path
        name: folderPath
        required: true
        type: string
      - description: CCTV ID
        in: path
        name: cctvId
        required: true
        type: string
      - description: Image type (roi_result or fgmask)
        in: path
        name: imageType
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResImage'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: 이미지 불러오기
      tags:
      - parking
  /v0.1/parking/{projectId}/history:
    get:
      consumes:
      - application/json
      description: Gets the learning history for a project
      parameters:
      - description: Project ID
        in: path
        name: projectId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResHistory'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get Learning History
      tags:
      - parking
  /v0.1/parking/{projectId}/images/roi-folders:
    get:
      consumes:
      - application/json
      description: |
        프로젝트의 ROI 파일 폴더 목록과 통계를 조회합니다.

        ■ errCode with 400
        PARAM_BAD : 파라미터 오류

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
      parameters:
      - description: Project ID
        in: path
        name: projectId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResRoiStats'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: ROI 파일 폴더 통계 조회
      tags:
      - parking
  /v0.1/parking/{projectId}/images/test-folders:
    get:
      consumes:
      - application/json
      description: |
        프로젝트의 테스트 이미지 폴더 목록과 통계를 조회합니다.

        ■ errCode with 400
        PARAM_BAD : 파라미터 오류

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
      parameters:
      - description: Project ID
        in: path
        name: projectId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResTestStats'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: 테스트 이미지 폴더 통계 조회
      tags:
      - parking
  /v0.1/parking/{projectId}/images/train-folders:
    get:
      consumes:
      - application/json
      description: |
        프로젝트의 학습 이미지 폴더 목록과 통계를 조회합니다.

        ■ errCode with 400
        PARAM_BAD : 파라미터 오류

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
      parameters:
      - description: Project ID
        in: path
        name: projectId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResLearningStats'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: 학습 이미지 폴더 통계 조회
      tags:
      - parking
  /v0.1/parking/{projectId}/labels/{folderPath}/{cctvId}:
    get:
      consumes:
      - application/json
      description: 특정 CCTV의 라벨 데이터를 조회합니다.
      parameters:
      - description: 프로젝트 ID
        in: path
        name: projectId
        required: true
        type: string
      - description: 폴더 경로
        in: path
        name: folderPath
        required: true
        type: string
      - description: CCTV ID
        in: path
        name: cctvId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 라벨 데이터 조회 성공
          schema:
            $ref: '#/definitions/response.ResGetLabel'
        "400":
          description: 잘못된 요청
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 서버 오류
          schema:
            additionalProperties: true
            type: object
      summary: 라벨 데이터 조회
      tags:
      - Labels
    post:
      consumes:
      - application/json
      description: CCTV의 라벨 데이터를 저장합니다.
      parameters:
      - description: 프로젝트 ID
        in: path
        name: projectId
        required: true
        type: string
      - description: 폴더 경로
        in: path
        name: folderPath
        required: true
        type: string
      - description: CCTV ID
        in: path
        name: cctvId
        required: true
        type: string
      - description: 라벨 데이터
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.ReqLabelSave'
      produces:
      - application/json
      responses:
        "200":
          description: 라벨 데이터 저장 성공
          schema:
            $ref: '#/definitions/response.ResSaveLabel'
        "400":
          description: 잘못된 요청
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 서버 오류
          schema:
            additionalProperties: true
            type: object
      summary: 라벨 데이터 저장
      tags:
      - Labels
  /v0.1/parking/{projectId}/learning:
    post:
      consumes:
      - application/json
      description: OpenCV를 사용하여 주차면 학습을 실행합니다.
      parameters:
      - description: 프로젝트 ID
        in: path
        name: projectId
        required: true
        type: string
      - description: 학습 요청 데이터
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.ReqLearning'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResLearning'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: 학습 실행
  /v0.1/parking/{projectId}/learning-results/{folder}:
    get:
      consumes:
      - application/json
      description: Gets the list of CCTV results for a specific learning session
      parameters:
      - description: Project ID
        in: path
        name: projectId
        required: true
        type: string
      - description: Learning result folder
        in: path
        name: folder
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResLearningResults'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get Learning Results
      tags:
      - parking
  /v0.1/parking/{projectId}/roi-files:
    post:
      consumes:
      - multipart/form-data
      description: |
        JSON 파일들을 서버에 저장합니다.
        파일명이 그대로 유지되어 저장됩니다.

        ■ errCode with 400
        PARAM_BAD : 파라미터 오류

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
      parameters:
      - description: Project ID
        in: path
        name: projectId
        required: true
        type: string
      - description: ROI JSON 파일들
        in: formData
        name: files
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResRoiUpload'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: ROI 파일 업로드
      tags:
      - parking
  /v0.1/parking/{projectId}/test-images:
    post:
      consumes:
      - multipart/form-data
      description: |
        폴더를 업로드하여 테스트 이미지들을 서버에 저장합니다.
        폴더 구조가 그대로 유지되어 저장됩니다.

        ■ errCode with 400
        PARAM_BAD : 파라미터 오류

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
      parameters:
      - description: Project ID
        in: path
        name: projectId
        required: true
        type: string
      - description: 테스트 이미지 폴더 내 파일들
        in: formData
        name: files
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResTestUpload'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: 테스트 이미지 폴더 업로드
      tags:
      - parking
  /v0.1/parking/{projectId}/train-images:
    post:
      consumes:
      - multipart/form-data
      description: |
        폴더를 업로드하여 학습 이미지들을 서버에 저장합니다.
        폴더 구조가 그대로 유지되어 저장됩니다.

        ■ errCode with 400
        PARAM_BAD : 파라미터 오류

        ■ errCode with 500
        INTERNAL_SERVER : 내부 로직 처리 실패
        INTERNAL_DB : DB 처리 실패
      parameters:
      - description: Project ID
        in: path
        name: projectId
        required: true
        type: string
      - description: 학습 이미지 폴더 내 파일들
        in: formData
        name: files
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResLearningUpload'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: 학습 이미지 폴더 업로드
      tags:
      - parking
swagger: "2.0"
