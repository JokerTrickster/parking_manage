// Package docs GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate_swagger = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v0.1/parking/{projectId}/history": {
            "get": {
                "description": "Gets the learning history for a project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parking"
                ],
                "summary": "Get Learning History",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project ID",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResHistory"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/v0.1/parking/{projectId}/images/roi-folders": {
            "get": {
                "description": "프로젝트의 ROI 파일 폴더 목록과 통계를 조회합니다.\n\n■ errCode with 400\nPARAM_BAD : 파라미터 오류\n\n■ errCode with 500\nINTERNAL_SERVER : 내부 로직 처리 실패\nINTERNAL_DB : DB 처리 실패\n",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parking"
                ],
                "summary": "ROI 파일 폴더 통계 조회",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project ID",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResRoiStats"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/v0.1/parking/{projectId}/images/test-folders": {
            "get": {
                "description": "프로젝트의 테스트 이미지 폴더 목록과 통계를 조회합니다.\n\n■ errCode with 400\nPARAM_BAD : 파라미터 오류\n\n■ errCode with 500\nINTERNAL_SERVER : 내부 로직 처리 실패\nINTERNAL_DB : DB 처리 실패\n",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parking"
                ],
                "summary": "테스트 이미지 폴더 통계 조회",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project ID",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResTestStats"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/v0.1/parking/{projectId}/images/train-folders": {
            "get": {
                "description": "프로젝트의 학습 이미지 폴더 목록과 통계를 조회합니다.\n\n■ errCode with 400\nPARAM_BAD : 파라미터 오류\n\n■ errCode with 500\nINTERNAL_SERVER : 내부 로직 처리 실패\nINTERNAL_DB : DB 처리 실패\n",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parking"
                ],
                "summary": "학습 이미지 폴더 통계 조회",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project ID",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResLearningStats"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/v0.1/parking/{projectId}/labels/{folderPath}/{cctvId}": {
            "get": {
                "description": "특정 CCTV의 라벨 데이터를 조회합니다.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Labels"
                ],
                "summary": "라벨 데이터 조회",
                "parameters": [
                    {
                        "type": "string",
                        "description": "프로젝트 ID",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "폴더 경로",
                        "name": "folderPath",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "CCTV ID",
                        "name": "cctvId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "라벨 데이터 조회 성공",
                        "schema": {
                            "$ref": "#/definitions/response.ResGetLabel"
                        }
                    },
                    "400": {
                        "description": "잘못된 요청",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "서버 오류",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "description": "CCTV의 라벨 데이터를 저장합니다.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Labels"
                ],
                "summary": "라벨 데이터 저장",
                "parameters": [
                    {
                        "type": "string",
                        "description": "프로젝트 ID",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "폴더 경로",
                        "name": "folderPath",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "CCTV ID",
                        "name": "cctvId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "라벨 데이터",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.ReqLabelSave"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "라벨 데이터 저장 성공",
                        "schema": {
                            "$ref": "#/definitions/response.ResSaveLabel"
                        }
                    },
                    "400": {
                        "description": "잘못된 요청",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "서버 오류",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/v0.1/parking/{projectId}/learning": {
            "post": {
                "description": "OpenCV를 사용하여 주차면 학습을 실행합니다.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "학습 실행",
                "parameters": [
                    {
                        "type": "string",
                        "description": "프로젝트 ID",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "학습 요청 데이터",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.ReqLearning"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResLearning"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/v0.1/parking/{projectId}/learning-results/{folder}": {
            "get": {
                "description": "Gets the list of CCTV results for a specific learning session",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parking"
                ],
                "summary": "Get Learning Results",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project ID",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Learning result folder",
                        "name": "folder",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResLearningResults"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/v0.1/parking/{projectId}/roi-files": {
            "post": {
                "description": "JSON 파일들을 서버에 저장합니다.\n파일명이 그대로 유지되어 저장됩니다.\n\n■ errCode with 400\nPARAM_BAD : 파라미터 오류\n\n■ errCode with 500\nINTERNAL_SERVER : 내부 로직 처리 실패\nINTERNAL_DB : DB 처리 실패\n",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parking"
                ],
                "summary": "ROI 파일 업로드",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project ID",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "ROI JSON 파일들",
                        "name": "files",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResRoiUpload"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/v0.1/parking/{projectId}/test-images": {
            "post": {
                "description": "폴더를 업로드하여 테스트 이미지들을 서버에 저장합니다.\n폴더 구조가 그대로 유지되어 저장됩니다.\n\n■ errCode with 400\nPARAM_BAD : 파라미터 오류\n\n■ errCode with 500\nINTERNAL_SERVER : 내부 로직 처리 실패\nINTERNAL_DB : DB 처리 실패\n",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parking"
                ],
                "summary": "테스트 이미지 폴더 업로드",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project ID",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "테스트 이미지 폴더 내 파일들",
                        "name": "files",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResTestUpload"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/v0.1/parking/{projectId}/train-images": {
            "post": {
                "description": "폴더를 업로드하여 학습 이미지들을 서버에 저장합니다.\n폴더 구조가 그대로 유지되어 저장됩니다.\n\n■ errCode with 400\nPARAM_BAD : 파라미터 오류\n\n■ errCode with 500\nINTERNAL_SERVER : 내부 로직 처리 실패\nINTERNAL_DB : DB 처리 실패\n",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parking"
                ],
                "summary": "학습 이미지 폴더 업로드",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project ID",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "학습 이미지 폴더 내 파일들",
                        "name": "files",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResLearningUpload"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/v0.1/parking/{projectId}/{folderPath}/{cctvId}/images/{imageType}": {
            "get": {
                "description": "Gets a specific image (roi_result or fgmask) for a CCTV",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parking"
                ],
                "summary": "이미지 불러오기",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project ID",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Learning result folder path",
                        "name": "folderPath",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "CCTV ID",
                        "name": "cctvId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Image type (roi_result or fgmask)",
                        "name": "imageType",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResImage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/v0.1/parking/{projectId}/{folder}/{cctvId}/images": {
            "get": {
                "description": "Gets the ROI result and foreground mask images for a specific CCTV",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parking"
                ],
                "summary": "Get CCTV Images",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project ID",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Learning result folder",
                        "name": "folder",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "CCTV ID",
                        "name": "cctvId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResCctvImages"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/v0.1/roi/{projectId}/test-images": {
            "post": {
                "description": "이미지 폴더를 서버에 저장합니다.\n\n■ errCode with 400\nPARAM_BAD : 파라미터 오류\n\n■ errCode with 500\nINTERNAL_SERVER : 내부 로직 처리 실패\nINTERNAL_DB : DB 처리 실패\n",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roi"
                ],
                "summary": "이미지 폴더 업로드",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project ID",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "학습 이미지 폴더 내 파일들",
                        "name": "files",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResUpload"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "request.LabelData": {
            "type": "object",
            "properties": {
                "has_vehicle": {
                    "type": "boolean"
                },
                "roi_id": {
                    "type": "string"
                }
            }
        },
        "request.ReqLabelSave": {
            "type": "object",
            "properties": {
                "labels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/request.LabelData"
                    }
                }
            }
        },
        "request.ReqLearning": {
            "type": "object",
            "properties": {
                "iterations": {
                    "type": "integer"
                },
                "learningPath": {
                    "type": "string"
                },
                "learningRate": {
                    "type": "number"
                },
                "projectId": {
                    "type": "string"
                },
                "roiPath": {
                    "type": "string"
                },
                "testPath": {
                    "type": "string"
                },
                "varThreshold": {
                    "type": "number"
                }
            }
        },
        "response.CctvImagesData": {
            "type": "object",
            "properties": {
                "cctv_id": {
                    "type": "string"
                },
                "fg_mask_image": {
                    "type": "string"
                },
                "roi_result_image": {
                    "type": "string"
                }
            }
        },
        "response.CctvResultInfo": {
            "type": "object",
            "properties": {
                "cctv_id": {
                    "type": "string"
                },
                "has_images": {
                    "type": "boolean"
                }
            }
        },
        "response.FolderInfo": {
            "type": "object",
            "properties": {
                "fileCount": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                }
            }
        },
        "response.GetLabelData": {
            "type": "object",
            "properties": {
                "has_vehicle": {
                    "type": "boolean"
                },
                "roi_id": {
                    "type": "string"
                }
            }
        },
        "response.HistoryItem": {
            "type": "object",
            "properties": {
                "cctv_list": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "epoch": {
                    "type": "integer"
                },
                "folder_path": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "learning_rate": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "var_threshold": {
                    "type": "number"
                }
            }
        },
        "response.LearningResultsData": {
            "type": "object",
            "properties": {
                "cctv_list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.CctvResultInfo"
                    }
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "response.ResCctvImages": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.CctvImagesData"
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "response.ResGetLabel": {
            "type": "object",
            "properties": {
                "labels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.GetLabelData"
                    }
                }
            }
        },
        "response.ResHistory": {
            "type": "object",
            "properties": {
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.HistoryItem"
                    }
                }
            }
        },
        "response.ResImage": {
            "type": "object",
            "properties": {
                "content_type": {
                    "type": "string"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "response.ResLearning": {
            "type": "object",
            "properties": {
                "folder_path": {
                    "type": "string"
                }
            }
        },
        "response.ResLearningResults": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.LearningResultsData"
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "response.ResLearningStats": {
            "type": "object",
            "properties": {
                "folders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.FolderInfo"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "response.ResLearningUpload": {
            "type": "object",
            "properties": {
                "failed": {
                    "type": "integer"
                },
                "success": {
                    "type": "integer"
                },
                "total_files": {
                    "type": "integer"
                }
            }
        },
        "response.ResRoiStats": {
            "type": "object",
            "properties": {
                "folders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.FolderInfo"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "response.ResRoiUpload": {
            "type": "object",
            "properties": {
                "failed": {
                    "type": "integer"
                },
                "success": {
                    "type": "integer"
                },
                "total_files": {
                    "type": "integer"
                }
            }
        },
        "response.ResSaveLabel": {
            "type": "object",
            "properties": {
                "labels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.SaveLabelData"
                    }
                }
            }
        },
        "response.ResTestStats": {
            "type": "object",
            "properties": {
                "folders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.FolderInfo"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "response.ResTestUpload": {
            "type": "object",
            "properties": {
                "failed": {
                    "type": "integer"
                },
                "success": {
                    "type": "integer"
                },
                "total_files": {
                    "type": "integer"
                }
            }
        },
        "response.ResUpload": {
            "type": "object",
            "properties": {
                "failed": {
                    "type": "integer"
                },
                "success": {
                    "type": "integer"
                },
                "total_files": {
                    "type": "integer"
                }
            }
        },
        "response.SaveLabelData": {
            "type": "object",
            "properties": {
                "has_vehicle": {
                    "type": "boolean"
                },
                "roi_id": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo_swagger holds exported Swagger Info so clients can modify it
var SwaggerInfo_swagger = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate_swagger,
}

func init() {
	swag.Register(SwaggerInfo_swagger.InstanceName(), SwaggerInfo_swagger)
}
