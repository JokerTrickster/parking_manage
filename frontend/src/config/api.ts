// API ÏÑ§Ï†ï
export const API_CONFIG = {
  // Í∞úÎ∞ú ÌôòÍ≤Ω
  development: {
    BASE_URL: 'http://172.16.32.168:8080',
    UPLOAD_URL: 'http://172.16.32.168:8080/v0.1/parking',
    SWAGGER_URL: 'http://172.16.32.168:8080/swagger/index.html'
  },
  // ÌîÑÎ°úÎçïÏÖò ÌôòÍ≤Ω (ÎèÑÏª§)
  production: {
    BASE_URL: 'http://localhost:8080',
    UPLOAD_URL: 'http://localhost:8080/v0.1/parking',
    SWAGGER_URL: 'http://localhost:8080/swagger/index.html'
  }
};

// ÌòÑÏû¨ ÌôòÍ≤ΩÏóê Îî∞Î•∏ ÏÑ§Ï†ï Î∞òÌôò
const getCurrentConfig = () => {
  // Í∞ïÏ†úÎ°ú Í∞úÎ∞ú ÌôòÍ≤Ω ÏÇ¨Ïö©
  return API_CONFIG.development;
};

// API ÏÑ§Ï†ï Í∞ùÏ≤¥
export const apiConfig = getCurrentConfig();

// API ÏóîÎìúÌè¨Ïù∏Ìä∏
export const API_ENDPOINTS = {
  // ÌîÑÎ°úÏ†ùÌä∏ Í¥ÄÎ†®
  PROJECTS: '/api/projects',
  
  // ÌååÏùº ÏóÖÎ°úÎìú Í¥ÄÎ†®
  UPLOAD_LEARNING: (projectId: string) => `/v0.1/parking/${projectId}/train-images`,
  UPLOAD_TEST: (projectId: string) => `/v0.1/parking/${projectId}/test-images`,
  UPLOAD_ROI: (projectId: string) => `/v0.1/parking/${projectId}/roi-files`,
  
  // Ìè¥Îçî Í¥ÄÎ†®
  GET_FOLDERS: (projectId: string, fileType: string) => `/api/folders/${projectId}/${fileType}`,
  GET_LEARNING_FOLDERS: (projectId: string) => `/v0.1/parking/${projectId}/images/train-folders`,
  GET_TEST_FOLDERS: (projectId: string) => `/v0.1/parking/${projectId}/images/test-folders`,
  GET_ROI_FOLDERS: (projectId: string) => `/v0.1/parking/${projectId}/images/roi-folders`,
  DELETE_FILE_OR_FOLDER: (projectId: string, folderPath: string) => `/v0.1/parking/${projectId}/${folderPath}`,
  
  // Ï£ºÏ∞® ÌÖåÏä§Ìä∏ Í¥ÄÎ†®
  PARKING_TEST: '/api/parking-test',
  
  // ÌïôÏäµ Ïã§Ìñâ Í¥ÄÎ†®
  LEARNING: (projectId: string) => `/v0.1/parking/${projectId}/learning`,
  LEARNING_LIVE: (projectId: string) => `/v0.1/parking/${projectId}/learning/live`,
  
  // Î∞∞Ïπò Ïù¥ÎØ∏ÏßÄ Îã§Ïö¥Î°úÎìú
  BATCH_IMAGES: (projectId: string) => `/v0.1/parking/${projectId}/images/batch`,
  
  // ÌïôÏäµ Í≤∞Í≥º Ï°∞Ìöå Í¥ÄÎ†®
  LEARNING_RESULTS: (projectId: string, folderPath: string) => `/v0.1/parking/${projectId}/learning-results/${folderPath}`,
  LEARNING_HISTORY: (projectId: string) => `/v0.1/parking/${projectId}/history`,
  
  // CCTV Ïù¥ÎØ∏ÏßÄ Ï°∞Ìöå Í¥ÄÎ†®
  CCTV_IMAGE: (projectId: string, folderPath: string, cctvId: string, imageType: string) => 
    `/v0.1/parking/${projectId}/${folderPath}/${cctvId}/images/${imageType}`,
  // Ïã§ÏãúÍ∞Ñ CCTV Ïù¥ÎØ∏ÏßÄ Ï°∞Ìöå
  REALTIME_CCTV_IMAGE: (projectId: string, cctvId: string, imageType: string) => 
    `/v0.1/parking/${projectId}/${cctvId}/images/${imageType}`,
  
  // ROI Í¥ÄÎ†®
  GET_ROI_IMAGES: (projectId: string, folderPath: string) => `/v0.1/roi/${projectId}/${folderPath}/images`,
  GET_ROI_IMAGE: (projectId: string, folderPath: string, fileName: string) => `/v0.1/roi/${projectId}/${folderPath}?file=${fileName}`,
  CREATE_DRAFT_ROI: (projectId: string, roiFileName: string) => `/v0.1/roi/${projectId}/draft?file=${roiFileName}`,
  GET_DRAFT_ROI: (projectId: string, roiFileName: string) => `/v0.1/roi/${projectId}/draft?file=${roiFileName}`,
  SAVE_DRAFT_ROI: (projectId: string, roiFileName: string) => `/v0.1/roi/${projectId}/draft/save?file=${roiFileName}`,
  CREATE_ROI: (projectId: string) => `/v0.1/roi/${projectId}/create`,
  READ_ROI: (projectId: string) => `/v0.1/roi/${projectId}/read`,
  UPDATE_ROI: (projectId: string) => `/v0.1/roi/${projectId}/update`,
  DELETE_ROI: (projectId: string) => `/v0.1/roi/${projectId}/delete`,
  
  // Swagger
  SWAGGER: '/swagger/index.html'
};

// axios Í∏∞Î≥∏ ÏÑ§Ï†ï
export const axiosConfig = {
  baseURL: apiConfig.BASE_URL,
  timeout: 30000, // 30Ï¥à
  headers: {
    'Content-Type': 'application/json',
  }
};

// ÏÑ§Ï†ï Ï†ïÎ≥¥ Ï∂úÎ†• (Í∞úÎ∞ú ÌôòÍ≤ΩÏóêÏÑúÎßå)
if (process.env.NODE_ENV === 'development') {
  console.log('üîß API ÏÑ§Ï†ï:', {
    BASE_URL: apiConfig.BASE_URL,
    UPLOAD_URL: apiConfig.UPLOAD_URL,
    SWAGGER_URL: apiConfig.SWAGGER_URL,
    NODE_ENV: process.env.NODE_ENV
  });
} 